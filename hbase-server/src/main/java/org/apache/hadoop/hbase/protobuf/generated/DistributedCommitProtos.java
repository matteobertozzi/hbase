// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Commit.proto

package org.apache.hadoop.hbase.protobuf.generated;

public final class DistributedCommitProtos {
  private DistributedCommitProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum CommitPhase
      implements com.google.protobuf.ProtocolMessageEnum {
    UNKNOWN(0, 1),
    PRE_PREPARE(1, 2),
    PREPARE(2, 3),
    PRE_COMMIT(3, 4),
    COMMIT(4, 5),
    POST_COMMIT(5, 6),
    ;
    
    public static final int UNKNOWN_VALUE = 1;
    public static final int PRE_PREPARE_VALUE = 2;
    public static final int PREPARE_VALUE = 3;
    public static final int PRE_COMMIT_VALUE = 4;
    public static final int COMMIT_VALUE = 5;
    public static final int POST_COMMIT_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static CommitPhase valueOf(int value) {
      switch (value) {
        case 1: return UNKNOWN;
        case 2: return PRE_PREPARE;
        case 3: return PREPARE;
        case 4: return PRE_COMMIT;
        case 5: return COMMIT;
        case 6: return POST_COMMIT;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CommitPhase>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CommitPhase>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommitPhase>() {
            public CommitPhase findValueByNumber(int number) {
              return CommitPhase.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final CommitPhase[] VALUES = {
      UNKNOWN, PRE_PREPARE, PREPARE, PRE_COMMIT, COMMIT, POST_COMMIT, 
    };
    
    public static CommitPhase valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CommitPhase(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:CommitPhase)
  }
  
  public interface DistributedCommitExceptionMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CommitPhase phase = 1;
    boolean hasPhase();
    org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase getPhase();
    
    // optional bytes otherInfo = 2;
    boolean hasOtherInfo();
    com.google.protobuf.ByteString getOtherInfo();
  }
  public static final class DistributedCommitExceptionMessage extends
      com.google.protobuf.GeneratedMessage
      implements DistributedCommitExceptionMessageOrBuilder {
    // Use DistributedCommitExceptionMessage.newBuilder() to construct.
    private DistributedCommitExceptionMessage(Builder builder) {
      super(builder);
    }
    private DistributedCommitExceptionMessage(boolean noInit) {}
    
    private static final DistributedCommitExceptionMessage defaultInstance;
    public static DistributedCommitExceptionMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public DistributedCommitExceptionMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.internal_static_DistributedCommitExceptionMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.internal_static_DistributedCommitExceptionMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CommitPhase phase = 1;
    public static final int PHASE_FIELD_NUMBER = 1;
    private org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase phase_;
    public boolean hasPhase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase getPhase() {
      return phase_;
    }
    
    // optional bytes otherInfo = 2;
    public static final int OTHERINFO_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString otherInfo_;
    public boolean hasOtherInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getOtherInfo() {
      return otherInfo_;
    }
    
    private void initFields() {
      phase_ = org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase.UNKNOWN;
      otherInfo_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, phase_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, otherInfo_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, phase_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, otherInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage)) {
        return super.equals(obj);
      }
      org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage other = (org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage) obj;
      
      boolean result = true;
      result = result && (hasPhase() == other.hasPhase());
      if (hasPhase()) {
        result = result &&
            (getPhase() == other.getPhase());
      }
      result = result && (hasOtherInfo() == other.hasOtherInfo());
      if (hasOtherInfo()) {
        result = result && getOtherInfo()
            .equals(other.getOtherInfo());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }
    
    @java.lang.Override
    public int hashCode() {
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasPhase()) {
        hash = (37 * hash) + PHASE_FIELD_NUMBER;
        hash = (53 * hash) + hashEnum(getPhase());
      }
      if (hasOtherInfo()) {
        hash = (37 * hash) + OTHERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getOtherInfo().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      return hash;
    }
    
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.internal_static_DistributedCommitExceptionMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.internal_static_DistributedCommitExceptionMessage_fieldAccessorTable;
      }
      
      // Construct using org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        phase_ = org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase.UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000001);
        otherInfo_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage.getDescriptor();
      }
      
      public org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage getDefaultInstanceForType() {
        return org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage.getDefaultInstance();
      }
      
      public org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage build() {
        org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage buildPartial() {
        org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage result = new org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.phase_ = phase_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.otherInfo_ = otherInfo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage) {
          return mergeFrom((org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage other) {
        if (other == org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage.getDefaultInstance()) return this;
        if (other.hasPhase()) {
          setPhase(other.getPhase());
        }
        if (other.hasOtherInfo()) {
          setOtherInfo(other.getOtherInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase value = org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                phase_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              otherInfo_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CommitPhase phase = 1;
      private org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase phase_ = org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase.UNKNOWN;
      public boolean hasPhase() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase getPhase() {
        return phase_;
      }
      public Builder setPhase(org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        phase_ = value;
        onChanged();
        return this;
      }
      public Builder clearPhase() {
        bitField0_ = (bitField0_ & ~0x00000001);
        phase_ = org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.CommitPhase.UNKNOWN;
        onChanged();
        return this;
      }
      
      // optional bytes otherInfo = 2;
      private com.google.protobuf.ByteString otherInfo_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasOtherInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getOtherInfo() {
        return otherInfo_;
      }
      public Builder setOtherInfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        otherInfo_ = value;
        onChanged();
        return this;
      }
      public Builder clearOtherInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        otherInfo_ = getDefaultInstance().getOtherInfo();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DistributedCommitExceptionMessage)
    }
    
    static {
      defaultInstance = new DistributedCommitExceptionMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DistributedCommitExceptionMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DistributedCommitExceptionMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DistributedCommitExceptionMessage_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Commit.proto\032\023ErrorHandling.proto\"S\n!D" +
      "istributedCommitExceptionMessage\022\033\n\005phas" +
      "e\030\001 \001(\0162\014.CommitPhase\022\021\n\totherInfo\030\002 \001(\014" +
      "*e\n\013CommitPhase\022\013\n\007UNKNOWN\020\001\022\017\n\013PRE_PREP" +
      "ARE\020\002\022\013\n\007PREPARE\020\003\022\016\n\nPRE_COMMIT\020\004\022\n\n\006CO" +
      "MMIT\020\005\022\017\n\013POST_COMMIT\020\006BJ\n*org.apache.ha" +
      "doop.hbase.protobuf.generatedB\027Distribut" +
      "edCommitProtosH\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_DistributedCommitExceptionMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_DistributedCommitExceptionMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DistributedCommitExceptionMessage_descriptor,
              new java.lang.String[] { "Phase", "OtherInfo", },
              org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage.class,
              org.apache.hadoop.hbase.protobuf.generated.DistributedCommitProtos.DistributedCommitExceptionMessage.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.hadoop.hbase.protobuf.generated.ErrorHandlingProtos.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
